<?xml version="1.0"?>
<launch>

  <arg name="debug" default="true"/>

  <!-- The name of the parameter under which the URDF is loaded -->
  <arg name="robot_description" default="robot_description"/>


  <include file="$(find ur5_tams)/launch/ur5_bringup.launch"/>

  <!-- connect to arm 
  <include file="$(find project15_manipulation)/launch/ur5_bringup.launch"/>
  -->


  <!-- load robotmodel (arm+corner , limited by default) 
  <include file="$(find project15_manipulation)/launch/ur5corner_upload.launch"/>
  -->
  <!--
  <include file="$(find ur_gazebo)/launch/controller_utils.launch"/>
  
  <rosparam file="$(find ur_gazebo)/controller/arm_controller_ur5.yaml" command="load"/>
  
  <node name="arm_controller_spawner" pkg="controller_manager" type="spawner" args="arm_controller"/>
-->
  <!-- Given the published joint states, publish tf for the robot links 
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />
 -->
  

  <!-- start movegroup -->
  <include file="$(find ur5_tams_moveit)/launch/move_group.launch">
    <arg name="debug" value="$(arg debug)"/>
  </include>


  <!-- start rviz visulisation -->
   <include file="$(find ur5_tams_moveit)/launch/moveit_rviz.launch" >
    <arg name="config" value="true" />
  </include>

<!-- connect to hand -->
  <node name="robotiqSModel" pkg="robotiq_s_model_control" type="SModelTcpNode.py" args="192.168.1.11" respawn="true"/>
<!-- publish hand states -->
<node name="robotiq_s_model_joint_state_publisher" pkg="robotiq_s_model_joint_state_publisher" type="robotiq_s_model_joint_state_publisher.py" respawn="true"/>

<!-- start ur5actionclient -->
<node name="PlaceObject" pkg="project15_manipulation" type="cppActionServerPlaceObject"  respawn="true"/>

</launch>
